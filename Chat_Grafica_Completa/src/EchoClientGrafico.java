/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.event.WindowEvent;
import java.net.*;
import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author utente
 */
public class EchoClientGrafico extends javax.swing.JFrame {

    ArrayList<String> user;
    String indirizzo;
    String nome;
    OutputStreamWriter osw;
    BufferedWriter bw;
    PrintWriter out;
    Socket socket;
    Thread t1;

    /**
     * Creates new form EchoClientGrafico
     *
     * @param nome
     * @throws java.io.IOException
     */
    public EchoClientGrafico(String nome) throws IOException {
        super("Chat di " + nome);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        show();
        this.nome = nome;
        user = new ArrayList<>();
        indirizzo = "172.16.3.226";
        user.add(nome);
        initComponents();
        try {
            Socket socket = new Socket(indirizzo, EchoServer.PORT);
            this.socket = socket;
            System.out.println("EchoClient: avviato");
            System.out.println("Socket del client: " + socket);
            //System.out.print("Username: ");
            //String str;
            String userInput;
            //BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in));
            /*str = stdIn.readLine();
            user.add(str);*/
// creazione stream di input da socket
            /*InputStreamReader isr = new InputStreamReader(socket.getInputStream());
            BufferedReader in = new BufferedReader(isr);*/
            RunnablesClient r = new RunnablesClient(socket, user, Area);
            Thread t1 = new Thread(r);
            this.t1 = t1;
            t1.start();
// creazione stream di output su socket
            OutputStreamWriter osw = new OutputStreamWriter(socket.getOutputStream());
            BufferedWriter bw = new BufferedWriter(osw);
            PrintWriter out = new PrintWriter(bw, true);
            this.out = out;
            out.println(nome + " si Ã¨ unito alla chat");
            //System.out.println("Ti sei unito alla chat");
            Area.append("Ti sei unito alla chat\n");

        } catch (UnknownHostException e) {
            System.err.println("Host non riconosciuto... " + indirizzo);
            System.exit(1);
        } catch (IOException e) {
            System.err.println("Non riesco ad avere I/O per la connessione a: " + indirizzo);
            System.exit(1);
        }
    }
    /*public void windowClosing (WindowEvent e) {
        if(JOptionPane.showConfirmDialog (null, "sei sicuro?",null,JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            System.out.println("Window Closing");
            this.dispose();
        }
    }
    /*public void windowClosing(WindowEvent arg0) {
             System.out.println("Window Closing");
             System.exit(1);
    }
    /*public void windowClosing(WindowEvent e){
        if(1 == e.WINDOW_CLOSED){
            out.println(nome + " ha abbandonato la chat ");
            out.println("quit");
            user.remove(nome);
            System.out.println("EchoClient: passo e chiudo...");
        } 
    }*/
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Invia = new javax.swing.JButton();
        Messaggio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Area = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Invia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Invia.setText("Invia");
        Invia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InviaActionPerformed(evt);
            }
        });

        Messaggio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MessaggioActionPerformed(evt);
            }
        });

        Area.setColumns(20);
        Area.setRows(5);
        jScrollPane1.setViewportView(Area);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Messaggio, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Invia, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Invia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Messaggio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InviaActionPerformed
        if (!Messaggio.getText().equals("")) {
            out.println(nome + ": " + Messaggio.getText());
            Area.append(nome + ": " + Messaggio.getText() + "\n");
            Messaggio.setText("");
        }
    }//GEN-LAST:event_InviaActionPerformed

    private void MessaggioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MessaggioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MessaggioActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        out.println(nome + " ha abbandonato la chat ");
        out.println("quit");
        user.remove(nome);
        out.close();
        try {
            socket.close();
        } catch (IOException ex) {
            Logger.getLogger(EchoClientGrafico.class.getName()).log(Level.SEVERE, null, ex);
        }
        t1.stop();
        System.out.println("EchoClient: passo e chiudo...");
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EchoClientGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EchoClientGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EchoClientGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EchoClientGrafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new EchoClientGrafico("ciao").setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(EchoClientGrafico.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Area;
    private javax.swing.JButton Invia;
    private javax.swing.JTextField Messaggio;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
